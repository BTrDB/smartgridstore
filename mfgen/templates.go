// Code generated by go-bindata.
// sources:
// ../manifest_templates/adminconsole.deployment.yaml
// ../manifest_templates/btrdb.statefulset.yaml
// ../manifest_templates/c37ingress.deployment.yaml
// ../manifest_templates/create_admin_key.sh
// ../manifest_templates/createdb.job.yaml
// ../manifest_templates/etcd.statefulset.yaml
// ../manifest_templates/ingester.deployment.yaml
// ../manifest_templates/mrplotter.deployment.yaml
// ../manifest_templates/pmu2btrdb.deployment.yaml
// ../manifest_templates/receiver.deployment.yaml
// DO NOT EDIT!

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _adminconsoleDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x54\xc1\x8a\xdb\x30\x10\xbd\xfb\x2b\x06\x7a\xb6\xdd\xa4\x0b\xa5\x3a\x6e\x12\x4a\xa0\xcd\x9a\x26\xf4\x5a\x14\x79\x36\x11\x2b\x4b\x42\x9a\x98\x0d\xc2\xff\x5e\xe4\xdd\x38\x56\x70\x37\xd5\x49\x9e\x99\xf7\x66\xe6\xe1\xa7\x4f\x10\x02\x14\xdf\x51\xff\x90\x1a\xa1\xeb\x32\x6e\xe5\x6f\x74\x5e\x1a\xcd\x00\x5f\x09\x75\xbc\xfa\xb2\x9d\xed\x91\xf8\x2c\x7b\x91\xba\x66\xb0\x44\xab\xcc\xb9\x41\x4d\x59\x83\xc4\x6b\x4e\x9c\x65\x00\x9a\x37\xc8\x40\x18\xed\x8d\xc2\xcc\x5b\x14\x31\xea\xd0\x2a\x29\xb8\x67\x30\xcb\x00\x08\x1b\xab\x38\x61\xcc\x00\x8c\xd1\xf1\x28\xbe\x47\xe5\x2f\x5f\x00\xdc\xda\x2b\x61\x0c\x5c\x48\xe3\x11\x46\x13\x97\x1a\xdd\x00\xc8\x6f\x46\xb8\xd0\xc8\x86\x1f\x90\xc1\x9e\x5c\xbd\x2f\x43\x28\xaa\xe7\xd7\xae\x7b\x2f\x62\x21\x14\x3b\xee\x0e\x48\xef\x7b\x77\x5d\x8a\xab\x4e\x4a\x55\x46\x49\x71\x66\x10\x42\xb1\x18\xba\x16\xeb\x34\x3d\x02\xa2\x6e\xaf\x4b\x5c\xe7\x5a\xed\x16\xcb\x3f\xab\xcd\xb2\x7a\x5a\x6f\x76\xa3\x3c\x40\xcb\xd5\x09\x19\x1c\x89\x2c\x2b\x4b\x24\x51\xb3\xf9\x97\xaf\xdf\x26\x38\x1e\x77\xbf\x96\x8f\x03\xc9\x76\x8a\xa5\xdf\x33\xdf\x1b\x43\x9e\x1c\xb7\xec\xe1\x61\xf6\x79\xa8\x6b\x8d\x3a\x35\xf8\xd3\x9c\x34\xf9\xa9\x19\x05\xda\x63\xfe\x82\x67\x27\xf5\x21\x21\x6f\x22\xa4\xe2\x74\x64\x10\x07\x2c\x63\x61\x99\x54\x38\xe4\xf5\x93\x56\x67\x06\xe4\x4e\x38\xc1\xcd\xeb\x46\xea\xfc\x68\x3c\xc5\x0e\x1f\xb2\xf7\xa5\x1e\x5d\x8b\xee\xbf\x9a\x58\xe3\x6e\xf7\x19\xfe\x8f\xca\x38\x62\x30\x9f\xcf\xe7\x09\x93\x75\x86\x8c\x30\x8a\xc1\x6e\x51\x25\x99\xd1\xb4\x91\x37\x1b\x2b\x37\x6a\x72\x47\x32\x8f\xc2\x21\xb1\x84\xf9\x2d\xb6\xf9\x37\xec\xae\x54\xf7\x58\x6f\x80\x79\x9e\x27\x9e\x6e\x2f\x1e\xde\xa2\x6b\xa5\xc0\x0f\x0c\x9c\xda\x31\xb1\xe2\xc5\x86\x83\xea\x79\x7f\x1d\x89\x4c\xbd\xa5\xde\x94\x4f\x85\xbc\x6d\x12\x5f\x19\xa7\xb9\x5a\x57\x9e\x85\xe0\xb8\x3e\x20\x14\x5b\x49\xb8\xd6\xcf\xa6\x58\x5d\xb3\xbd\xbf\xf2\xe8\xc1\xae\x0b\x01\x75\xdd\x07\x3c\x2a\x14\x64\xdc\xc4\x94\x7f\x03\x00\x00\xff\xff\x29\xb2\x7f\xcb\xdd\x04\x00\x00")

func adminconsoleDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_adminconsoleDeploymentYaml,
		"adminconsole.deployment.yaml",
	)
}

func adminconsoleDeploymentYaml() (*asset, error) {
	bytes, err := adminconsoleDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "adminconsole.deployment.yaml", size: 1245, mode: os.FileMode(436), modTime: time.Unix(1487551353, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _btrdbStatefulsetYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xc1\x8e\xe2\x38\x10\xbd\xe7\x2b\x4a\xcc\x99\x00\x33\x23\xad\xc6\x37\x08\xec\x34\xda\x6e\x88\xba\xa3\x59\xed\x09\x19\xa7\x20\x56\x3b\xb6\xd7\xae\xc0\xa2\x88\x7f\x5f\x25\x81\x6c\xc2\xc0\x1c\x76\xc6\x27\xa8\x57\xf5\x9e\x5f\xc5\x2e\x7f\x80\xb2\x84\xf0\x2b\xea\x67\xa9\x11\xce\xe7\x60\x38\x1c\x06\xdc\xca\x6f\xe8\xbc\x34\x9a\xc1\x61\x12\xbc\x4b\x9d\x32\x78\x43\x77\x90\x02\x83\x1c\x89\xa7\x9c\x38\x0b\x00\x34\xcf\x91\xc1\x96\x5c\xba\x0d\x00\x14\xdf\xa2\xf2\x55\x1c\x80\x5b\x7b\x05\xbc\x45\x51\x05\xad\x71\x54\xa3\xc3\xfa\x27\x83\xcf\x9f\x27\xe3\x3a\xb9\xa1\xd9\x3b\x2b\x3a\xe8\x97\xf1\xb8\x8b\x66\x44\x36\x00\x10\xaa\xf0\x84\x6e\x19\x33\x58\x19\x8d\x01\x80\x47\x85\x82\x8c\xfb\x4e\xf7\xd6\x09\xb7\xd6\x8f\x0e\x93\x2d\x12\x6f\x3d\x11\x27\xdc\x15\xea\x0d\xe9\xa1\xaf\xeb\xf6\x7d\xe3\x7f\x55\x43\x83\x1a\x1b\x04\x00\x0e\xad\x92\x82\x7b\x06\x93\x00\x80\x30\xb7\x8a\x13\x36\x9b\xe9\x52\x56\xab\xdb\xa0\x9b\xcd\x56\x7f\xaf\x4a\xd5\x12\x46\x13\x97\x1a\x5d\x9b\x3e\xbc\xe9\x76\xb3\x64\xce\xf7\xd7\xe0\xa8\x2c\xc3\x78\xf7\xcf\xf9\x9c\x6e\x59\x59\x86\x09\x77\x7b\xa4\x8b\xfd\xf3\xb9\x5f\x12\x17\x4a\xc5\x46\x49\x71\x62\x50\x96\x61\xd4\xca\x85\xcb\x3e\xdc\x29\x74\xe8\x4d\xe1\x04\x76\x1c\x54\xc1\xbf\x0b\xf4\xd4\x8b\x01\x08\x5b\x30\x18\x4c\xc6\x83\x5e\xf4\x03\x88\x8c\xeb\xbd\xd4\x7b\xa0\x4c\x7a\xc8\x31\x37\xee\x04\x4a\xe6\x92\xe0\x28\x95\x02\x6d\xa8\xc9\x41\xc8\xcc\x11\xf2\x42\x64\x97\xac\x1b\xa2\xda\x30\x90\x93\xe8\x81\x0c\x14\x1e\x43\x48\x32\x4e\x20\x3d\xd0\x11\xf9\x3b\xa6\xb0\x3d\xc1\xec\x79\x1d\xfd\xb1\x89\xa6\xd1\xd3\x02\xb6\xa8\xcc\xb1\x47\xd3\x30\x33\xf8\xf4\xf1\xab\x6c\x01\xd4\x87\xae\x97\x6b\xdb\x17\x49\x34\xdf\x2c\x56\xf3\x78\xbd\x5c\x25\x3d\x96\x03\x57\xc5\xe5\x80\xb2\xd1\x08\x49\xa4\xec\xe3\xa7\xdf\xbe\xdc\xe1\x88\x16\xf1\xd3\xe6\x69\x9d\x6c\xe2\xf5\xfa\xf9\x1e\x47\x59\x86\x6f\x92\x70\xa9\x77\x26\x8c\xd0\x66\xe1\x2c\x71\xf3\x59\x6c\x8c\xea\x7c\x86\x1b\xbe\xf9\x34\x99\xfe\x2a\xc2\x59\xf2\x3a\x9f\x6d\x3a\x4d\xbb\xc7\x39\x98\x8c\xeb\x35\x78\x48\xb0\x58\x4d\x67\xcf\x8b\xcd\xfa\xdb\xe2\xf5\xcf\x69\x12\x3d\xdd\x65\x39\xa1\xbf\xc7\xf0\xf2\xd7\x26\x5e\xcf\x37\xab\xe9\xcb\x1d\xf1\xdf\x9d\xc9\xfb\x07\x0d\x60\x27\x51\xa5\xaf\xb8\xbb\x8d\x5f\x90\x98\x53\xc6\xda\x9b\x18\x56\x22\x8f\x55\x97\xf1\x2f\xd4\xf4\xc4\xa9\xf0\xa1\x35\x69\x87\xf6\x60\x54\x91\xe3\x8b\x29\x74\xff\xca\x5c\x37\x22\xd0\x66\xc3\x77\x3c\x39\xa9\xf7\xfd\xb3\x5a\x95\x34\xc4\xd5\x19\x1b\x55\x89\xa3\x5e\x86\x43\x9e\xae\xb5\x3a\x31\x20\x57\xfc\x67\xb2\x1d\xbb\x57\xa1\x76\xb4\xc4\xfd\x29\x7c\x49\x77\x86\x8c\x30\x8a\x41\x12\xc5\x8f\xab\xda\xe9\xfc\xb8\xaa\xb1\xda\x93\xfe\xa1\x47\x8f\xc2\x21\xf5\x5b\xda\xc4\x56\xdf\x97\xfd\xdf\x67\x6a\xb8\x35\x86\x3c\x39\x6e\x7f\xe6\xc1\xa2\x7a\xb4\xc6\x3f\x78\xc5\x1e\xbe\x4a\xff\x06\x00\x00\xff\xff\x3d\x79\x98\x46\x71\x07\x00\x00")

func btrdbStatefulsetYamlBytes() ([]byte, error) {
	return bindataRead(
		_btrdbStatefulsetYaml,
		"btrdb.statefulset.yaml",
	)
}

func btrdbStatefulsetYaml() (*asset, error) {
	bytes, err := btrdbStatefulsetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "btrdb.statefulset.yaml", size: 1905, mode: os.FileMode(436), modTime: time.Unix(1497228902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _c37ingressDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\xcf\x6a\xc3\x30\x0c\x87\xef\x7e\x0a\xc1\xce\x4d\x96\xb5\x50\xa6\x63\x9b\x32\x0a\xa3\x0b\x5b\xd8\x75\x28\x89\xd6\x99\x39\x8e\xb1\xd5\xd2\x62\xf2\xee\x23\x63\xfd\x13\x56\x9d\x6c\x7f\xfe\x7d\x96\x7c\x07\x31\x42\xf2\xc4\xf6\x59\x5b\x86\xbe\x57\xe4\xf4\x3b\xfb\xa0\x3b\x8b\xc0\x07\x61\x3b\x2c\x43\xba\xcf\x2a\x16\xca\xd4\xb7\xb6\x0d\x42\xce\xce\x74\xc7\x96\xad\xa8\x96\x85\x1a\x12\x42\x05\x60\xa9\x65\x84\x7a\x3a\xd7\x76\xeb\x39\x04\x15\x1c\xd7\x03\xf0\xec\x8c\xae\x29\x20\x64\x0a\x40\xb8\x75\x86\x84\x07\x02\x70\x2d\x18\xca\x50\xc5\x26\x9c\x76\x00\xe4\xdc\xc8\x39\x9c\x9d\xbc\x43\xd5\x9d\x15\xd2\x96\xfd\x39\x33\xf9\xdf\xc8\x49\xa6\x5b\xda\x32\x42\x25\xbe\xa9\xd2\x18\x93\xe2\xf3\xd0\xf7\x97\x7b\x18\x63\x52\x92\xdf\xb2\xfc\xfd\x41\xdf\x8f\xa3\xc5\xce\x98\xa2\x33\xba\x3e\x22\xc4\x98\x2c\xcf\x6f\x27\xeb\x31\xbe\x0a\xb2\xdd\x5f\xa6\xb9\x74\xb7\x2a\x97\xf9\xc7\x6a\x93\x17\x2f\xeb\x4d\x79\xc5\x01\xf6\x64\x76\x8c\xf0\x25\xe2\x30\x4d\x59\xea\x06\x1f\xa6\xf3\xc7\x1b\x8e\x45\xf9\x9a\x2f\xce\x92\xb7\x5b\x96\xdf\x51\x27\x55\xd7\x49\x10\x4f\x0e\x67\xb3\xec\x5e\xfd\x04\x00\x00\xff\xff\xb8\xea\x47\x81\xf6\x01\x00\x00")

func c37ingressDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_c37ingressDeploymentYaml,
		"c37ingress.deployment.yaml",
	)
}

func c37ingressDeploymentYaml() (*asset, error) {
	bytes, err := c37ingressDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "c37ingress.deployment.yaml", size: 502, mode: os.FileMode(436), modTime: time.Unix(1497232064, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _create_admin_keySh = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xce\x41\x4e\xc3\x30\x10\x85\xe1\xbd\x4f\xf1\x68\x58\xc0\x62\xe8\x31\xd8\x20\xae\x80\x1c\x7b\x52\x8f\x12\x8f\x2d\xcf\x44\xa8\xaa\x7a\x77\x14\x29\x1c\xe0\xff\xde\x9b\x5e\xae\xb3\xe8\x75\x8e\x56\xc2\x84\xc7\x03\x1f\x9f\xac\x5f\xa2\x8c\xe7\x33\x4c\x5e\xc4\x90\x06\x47\x67\x43\x84\xf2\x2f\x4a\x33\xc7\xca\x77\x2c\x6d\xc0\x0b\x23\x35\xb5\xb6\x31\xa2\x66\xf4\xdd\x0d\xe2\x10\x45\x3c\x02\xe3\x34\xd8\x43\xdf\xad\x64\xbc\xbe\xd5\xd5\xb9\x76\x50\x7e\x0f\x66\x85\x56\xbe\xdf\x58\x41\x8e\x61\x11\xf4\x8d\xcb\x05\xb4\x40\xf2\xcf\xb0\x18\xd6\x7d\xe6\xe4\xdb\x39\x7f\x52\xb8\xb1\xf2\x90\x84\x98\xab\x28\x1d\x67\x0e\x06\x44\xcb\x68\x95\x16\xd9\xf8\xbf\xef\xad\xe7\xf0\x17\x00\x00\xff\xff\xc0\x65\x6b\x87\xdf\x00\x00\x00")

func create_admin_keyShBytes() ([]byte, error) {
	return bindataRead(
		_create_admin_keySh,
		"create_admin_key.sh",
	)
}

func create_admin_keySh() (*asset, error) {
	bytes, err := create_admin_keyShBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "create_admin_key.sh", size: 223, mode: os.FileMode(436), modTime: time.Unix(1487468500, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _createdbJobYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\x5f\x6f\xd3\x30\x10\x7f\xcf\xa7\x38\x6d\xaf\x34\x11\xf0\x80\xf0\x5b\xd7\x16\x56\xb4\x36\x11\x44\x48\x08\xa1\xea\x92\x5c\x1b\xab\x8e\x5d\xd9\x97\x6c\x55\x94\xef\x8e\xbc\xb6\x21\xd9\x8a\x78\xe1\x9e\x9c\xfb\xfd\x3b\x5b\x97\x5b\x68\x5b\x08\x3f\x93\x7e\x90\x9a\xa0\xeb\x82\x5b\x2e\xa5\x83\xdc\x12\x32\x39\xe0\x92\xa0\x40\xc6\x0c\x1d\x81\xd4\x90\xd3\xa1\x0c\x61\xb9\x85\xa3\xa9\xc1\xd6\x1a\x9e\xd9\x8f\x25\xf9\x13\x59\x02\xe9\x00\x75\x70\x4b\x4f\xd2\xb1\xd4\xbb\x5e\xfc\xe6\x59\xf1\x28\x95\x82\x12\x1b\x02\x84\x0c\x0b\x60\x59\x51\x18\xe0\x41\x7e\x27\xeb\xa4\xd1\x02\x32\xe4\xbc\x8c\x9a\xb7\xc1\x5e\xea\x42\xc0\x17\x93\x05\x15\x31\x7a\x1b\x11\x00\x68\xac\x48\x40\xc6\xb6\xc8\x26\xa7\x19\x8b\x2c\x70\x07\xca\x3d\xc8\x54\x1d\x14\x32\xf9\x33\xc0\x50\xe6\xeb\xaa\xd4\x03\x17\xb9\x2f\x4b\x8e\xd1\x72\x62\x94\xcc\x8f\x02\xd6\xd4\x90\x3d\x43\xb9\xd1\x8c\x52\x93\x75\x17\xf2\xe4\xef\x9e\xbe\x64\x85\xbb\x0b\x1a\xb5\x6d\x98\x6c\x9f\xba\xae\xc8\x44\xdb\x86\x29\xda\x1d\xf1\xf9\xd2\x5d\x37\x96\x24\xb5\x52\x97\x01\xda\x36\x9c\xf5\xb9\xe1\x72\x0c\x0f\x84\x68\x77\x4e\xc0\x4f\xb8\xa9\x70\x4f\x45\x76\x03\xbf\x7a\x88\x74\x23\xfa\x8f\x3f\x43\x2f\xd2\xd9\x7c\xb3\x58\xcf\x93\x78\xb9\x4e\x07\x38\x40\x83\xaa\x26\x01\x25\xf3\x41\x44\x11\x71\x5e\x88\x77\xef\x3f\x7c\xbc\xe2\x31\x5b\x24\xf7\x9b\xfb\x38\xdd\x24\x71\xfc\x70\xcd\xa3\x6d\xc3\x6f\x92\x69\xa9\xb7\x26\x9c\xf9\xd5\xb9\x4b\xed\xfc\x2e\x31\x46\x0d\x66\x7f\xe1\x37\x9f\xa6\xd3\xff\x65\xb8\xfa\xb1\x49\xe2\xf9\x66\x3d\x5d\x2d\x5e\xbb\x7d\xb2\xa6\x12\xa3\x36\xc0\x56\x92\x2a\xbe\xd2\xf6\x65\xff\x8c\x24\xc8\xa5\xe8\x37\x2b\xf4\x21\x3d\xb1\x31\xaa\xae\x68\x65\x6a\xcd\xee\xda\x83\xfb\x5f\x67\xb2\xa7\xa3\x95\x7a\x37\x72\xaf\xbc\xe4\xe4\xec\x5f\x3b\xf2\xc4\x68\xc4\xb0\x84\x45\xac\xd5\x51\x00\xdb\xfa\x92\x78\xca\x1b\x44\xfd\x23\xc8\x51\x6e\x89\xc7\x17\x3b\xf5\xd6\xaf\x65\xbf\x03\x00\x00\xff\xff\x40\xa1\xbf\xa5\x17\x04\x00\x00")

func createdbJobYamlBytes() ([]byte, error) {
	return bindataRead(
		_createdbJobYaml,
		"createdb.job.yaml",
	)
}

func createdbJobYaml() (*asset, error) {
	bytes, err := createdbJobYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "createdb.job.yaml", size: 1047, mode: os.FileMode(436), modTime: time.Unix(1487551375, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _etcdStatefulsetYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x56\x5d\x8f\xe2\x36\x14\x7d\xcf\xaf\xb8\x62\x5e\x0b\x03\x4c\xb7\xbb\x13\xa9\x0f\x99\x90\x8e\x50\x21\xa4\x90\x99\x6a\x55\x55\x91\x71\x2e\x83\xb5\x8e\x9d\xb5\x1d\xb6\x08\xcd\x7f\xaf\x9c\x40\x48\xf8\x18\xd1\x9a\x07\x92\x7b\xaf\xcf\xfd\xf0\xf1\x81\x3b\xd8\xed\xa0\xf7\x8c\x62\xc2\x04\xc2\xfb\xbb\x73\x07\xf1\x9a\x69\x58\x31\x8e\xf0\x83\x71\x0e\x4c\x68\x43\x84\x61\xc4\x20\x10\x30\x6b\x85\x08\x42\xa6\x08\x68\x68\x0a\x94\x17\xda\xa0\x82\x25\xa1\xdf\x30\x85\xe5\xd6\xb9\x03\xcc\x72\xb3\x1d\x31\x05\xd1\xab\xee\xc1\x13\xd1\x8c\x12\xce\xb7\xc0\x56\xb0\x95\x05\xa4\xc8\xd1\x20\x98\x35\x42\x2e\x53\x5d\xda\xca\x4c\x5c\x6a\x74\xee\xec\xbb\x82\x94\x18\xe2\x90\x9c\xbd\xa2\xd2\x4c\x0a\x17\x36\x03\xe7\x1b\x13\xa9\x0b\x0b\x54\x1b\x46\xd1\xc9\xd0\x10\x1b\xe5\x3a\x00\x82\x64\xe8\x96\x05\x39\x00\x9c\x2c\x91\x6b\x6b\x06\x20\x79\xbe\xb7\xeb\x1c\xa9\xb5\xe5\x52\x99\xd2\xd9\x2d\x1f\x5d\x18\x3e\x7c\x7e\x2c\x63\x73\x25\x8d\xa4\x92\xbb\x10\xfb\x51\x69\x39\xc2\x76\x29\x67\x28\x4c\xd7\x6e\x71\xe0\xd0\xf5\x38\x72\x21\x94\x02\x1d\x00\x8d\x1c\xa9\x91\xea\x34\x6d\xb7\xdb\x6d\xb5\x41\xf2\x5c\xdf\x6f\x06\x4b\x34\xa4\x6e\xc8\x10\x83\xab\x82\x2f\xd0\x5c\x6b\xea\x50\xbc\xae\x7a\x0f\x4b\x4f\xc7\xba\x3a\x0e\x80\xc2\x9c\x33\x4a\xb4\x0b\x0f\x0e\x80\xc1\x2c\xe7\xc4\x60\x55\x49\x13\xd0\xae\xe6\x70\xda\x95\xda\xb7\x43\x1e\xbb\x0c\xaa\x8c\x09\x62\x98\x14\xcf\x8a\x50\x8c\x50\x31\x99\x2e\x90\x4a\x91\x6a\x17\x06\xfd\x7d\x1c\x95\xc2\x10\x26\x50\xd5\xa8\xdd\xf6\x79\x54\x0b\xc5\xe6\x98\xf5\x10\x11\xc4\xfe\x28\x99\x8c\x17\x71\x10\x26\x51\x10\xcc\x93\x97\xf9\x64\x51\x47\x01\x6c\x08\x2f\xd0\x85\xb5\x31\xb9\x7b\x7f\xdf\xef\x95\x1f\x77\xf8\xf0\xa5\xff\x21\x94\x3f\x19\x07\x61\x7c\x2b\xd8\xfe\xf8\xcf\xc0\x46\x5e\xec\x25\xa3\xf1\xfc\x1c\xe2\x5e\xab\xcd\x7d\xab\xbb\xd6\x46\xef\x25\x9e\x25\xfe\x6c\x1a\x79\x7e\x3c\x9e\x85\xc9\x3c\x88\x83\xd0\x3e\x9d\x23\x75\x06\x9d\xcb\x18\x7f\xbc\xcc\x62\x2f\x79\xf2\xfc\xdf\x83\x70\x94\x3c\x7d\x8d\x83\x0b\xad\x74\xbe\x7c\xfa\xf2\xf8\xf8\xf0\xf3\xa7\xc7\xe1\x15\x98\x71\x38\x8e\xc7\xde\x24\xf1\x27\x2f\x8b\x38\xb8\xd0\x4a\x49\xee\xfe\xaf\xfb\xa1\x54\x6f\x3d\xfb\x55\x4e\xf9\xa7\xd2\x30\x68\xb9\x07\xa7\xee\x61\xcb\x3d\x3c\xba\xcf\x4a\x9a\x7e\x4d\xa2\xd9\x28\x09\xbd\x69\x70\x5a\xc9\x6f\x4a\x66\x6e\xc3\x08\xb0\x62\xc8\xd3\x39\xae\xda\xd6\xbd\x3d\x22\x66\xed\xd6\xe4\xee\x59\xf8\x3a\x8c\x65\xe4\x0d\x5d\x58\x1a\x95\x2e\xcb\x9a\xdc\x87\xde\xa0\xf7\xb9\xed\x8f\x0a\xce\x23\xc9\x19\xdd\xba\xe0\xf1\x1f\x64\xab\x6b\x7f\xad\x10\x87\xe2\x6b\x86\x47\x6d\xc1\xa8\x56\xd5\x5a\xa5\x0f\x0d\xf3\xb9\x9a\x5c\x01\x6b\xcc\xe9\x00\x66\xaf\x39\xaa\xab\x60\xbb\x1d\x5b\x01\x7e\x87\xde\x94\x69\xda\xf3\x36\x92\xa5\x0b\x23\x15\x79\x43\x9f\x13\xad\x61\x45\xb8\x2e\xb5\xbc\x9e\xb0\xe4\x45\x86\x53\x59\x88\x76\x63\x0d\x7d\xb3\x63\x4c\x59\x33\x67\x66\xc3\xab\x39\x97\x7c\xcf\xad\x84\x69\xdb\x62\x05\xe7\x73\xc2\xb2\x78\x2f\x36\x7b\x45\x3d\x55\x9b\xab\x09\x6e\x97\x21\x42\x29\x6a\x3d\x95\x29\x6a\x17\xfe\x82\xce\x1c\x49\xfa\xa7\x62\x06\x67\x82\x62\x07\xfe\xde\x87\x29\xd4\xb2\x50\x14\x1b\x98\x0a\xbf\x17\xa8\x9b\x1d\x03\xe8\x6a\x4e\x56\xbe\x9e\xd9\x99\x38\xe3\x3f\x06\x85\x7d\x3c\x95\xe8\x11\xe6\x5c\x6e\x33\x7b\xc2\x97\x15\xba\x6b\x7f\xff\x8a\xbc\x16\xea\xa3\x24\x0f\xfe\xbf\x24\x1f\x40\x4f\x47\x72\x5d\x71\x1b\x1b\x6e\xb9\x09\x44\xbd\xb5\xf8\x70\x69\xfb\x07\x17\xa5\x25\xe9\xc7\x22\xac\x68\xbd\x44\xc9\x38\x8c\x83\xf9\xab\x37\x49\x16\x81\xbf\x68\xdd\xe1\x83\x7a\x0d\x07\xbf\xf4\xfb\x9d\xff\xc2\xd2\x93\x02\x3f\x22\xe9\x11\xf1\x66\xb0\xfd\x66\x14\xe6\xf5\xc8\xf0\xb6\xfc\x50\x6b\x0a\xcf\x30\x2c\x91\x2a\xa6\x44\x97\x30\x4e\xff\xc8\xdc\xc6\xa1\x26\xf3\x9d\xaa\xfa\x16\xf9\x9d\x33\xd6\x9f\x32\xbe\x66\xfb\xb0\x6f\xe9\xbe\xdb\xa1\x48\xdf\xdf\x9d\x7f\x03\x00\x00\xff\xff\x8b\xfa\x55\xd3\xf4\x09\x00\x00")

func etcdStatefulsetYamlBytes() ([]byte, error) {
	return bindataRead(
		_etcdStatefulsetYaml,
		"etcd.statefulset.yaml",
	)
}

func etcdStatefulsetYaml() (*asset, error) {
	bytes, err := etcdStatefulsetYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "etcd.statefulset.yaml", size: 2548, mode: os.FileMode(436), modTime: time.Unix(1497228902, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ingesterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\x4f\x8b\xdb\x30\x10\xc5\xef\xfe\x14\x03\x3d\xc7\x6e\xda\x85\x52\x1d\x37\x31\x25\xb0\x4d\x4c\x12\xf6\xba\x8c\xed\x59\x47\xac\xfe\x21\x8d\xc3\x06\xe1\xef\x5e\xd4\x36\x8e\xbd\x0d\x54\x27\x5b\xf3\xde\xef\xbd\xd1\x27\x88\x11\xf2\x1f\x64\x9e\xa4\x21\x18\x86\x0c\x9d\x7c\x26\x1f\xa4\x35\x02\xe8\x9d\xc9\xa4\xcf\x50\x9c\x97\x35\x31\x2e\xb3\x37\x69\x5a\x01\x6b\x72\xca\x5e\x34\x19\xce\x34\x31\xb6\xc8\x28\x32\x00\x83\x9a\x04\x48\xd3\x51\x60\xf2\x8b\xde\xe9\x3e\x0b\x8e\x9a\x34\xf3\xe4\x94\x6c\x30\x08\x58\x66\x00\x4c\xda\x29\x64\x4a\x13\x80\x29\x23\x1d\x85\x35\xa9\x70\xfd\x03\x40\xe7\x3e\x62\xd3\xf5\x15\x9d\x4e\x63\x0d\xa3\x34\xe4\x47\xdb\xe2\x43\x9d\x91\x26\x35\x76\x24\xa0\x66\xdf\xd6\x45\x8c\x79\xf5\xfa\x3e\x0c\x57\x95\x88\x31\x3f\xa2\xef\x88\xff\xbe\xc2\x30\xcc\x8d\x55\xaf\x54\x65\x95\x6c\x2e\x02\x62\xcc\x57\x63\x6e\xbe\x99\x8f\x27\x46\x32\xe7\xdb\x32\xb7\x66\xe5\x71\xb5\x7e\x29\xb7\xeb\x6a\xb7\xd9\x1e\x27\x73\x80\x33\xaa\x9e\x04\x9c\x98\x9d\x28\x0a\xe2\xa6\x15\x5f\xbe\x7e\xfb\x7e\x87\xb1\x2f\x57\xe5\xe6\xb9\xdc\xbf\x54\xbb\xdd\xd3\x3d\x46\x8c\xf9\x41\x32\x6d\xcc\xab\xcd\x57\xe4\x4e\xf9\x81\xb1\x93\xa6\xab\xac\x55\x93\x8a\x37\xe2\xe3\x71\xbf\x7e\x1c\x6b\x1d\xee\x31\x7f\x3f\xdd\xa2\xb6\x96\x03\x7b\x74\xe2\xe1\x61\xf9\x79\xd4\x9d\xad\xea\x35\xfd\xb4\xbd\xe1\x70\x6f\xeb\x86\xdc\x69\xf1\x46\x17\x2f\x4d\x37\x83\xeb\x64\xa9\x90\x4f\x02\xd2\xca\x45\x12\x16\x33\x85\x27\x6c\x77\x46\x5d\x04\xb0\xef\x29\x9b\xe6\x4d\xa2\xfe\x13\x14\xa8\xf1\xc4\x62\x06\xfe\x73\xb7\xfd\xd7\xf6\x2b\x00\x00\xff\xff\xf5\x0a\x8b\x9a\x1f\x03\x00\x00")

func ingesterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_ingesterDeploymentYaml,
		"ingester.deployment.yaml",
	)
}

func ingesterDeploymentYaml() (*asset, error) {
	bytes, err := ingesterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ingester.deployment.yaml", size: 799, mode: os.FileMode(436), modTime: time.Unix(1487551387, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _mrplotterDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x93\x4f\x8f\xd3\x3c\x10\xc6\xef\xf9\x14\xa3\xbe\xe7\xa4\x7f\xb6\xfb\x02\x3e\x6e\x5b\xa1\x4a\xb0\x44\xb4\xe2\x8a\x5c\x67\xb6\x58\x38\xb6\xb1\x27\xd1\x56\x56\xbe\x3b\x72\x20\xa9\x03\x2d\x3e\xb9\x33\xf3\xfc\xea\xc7\x7e\xf2\x1f\x84\x00\xc5\x7b\xd4\x1f\xa4\x46\xe8\xba\x8c\x5b\xf9\x05\x9d\x97\x46\x33\xc0\x57\x42\x1d\xb7\x7e\xde\x2e\x4f\x48\x7c\x99\x7d\x97\xba\x62\xb0\x45\xab\xcc\xa5\x46\x4d\x59\x8d\xc4\x2b\x4e\x9c\x65\x00\x9a\xd7\xc8\xa0\x76\x56\x19\x22\x74\x99\xb7\x28\x62\xdd\xa1\x55\x52\x70\xcf\x60\x95\x01\x10\xd6\x56\x71\xc2\xd8\x01\x48\xf5\x71\x29\x7e\x42\xe5\x87\x5f\x00\xdc\xda\x14\x19\x4b\x03\x36\x2e\x61\x34\x71\xa9\xd1\x8d\x92\xfc\xaf\x63\x0c\x28\x59\xf3\x33\x32\x38\x91\xab\x4e\xf3\x10\x8a\xf2\xe5\xb5\xeb\xc6\x31\x16\x42\x71\xe4\xee\x8c\xf4\xdb\x7f\xd7\x4d\x95\x65\xa3\x54\x69\x94\x14\x17\x06\x21\x14\x9b\xf1\x9f\x8b\xfd\xb4\x9d\x08\x1d\x7a\xd3\x38\x81\x89\xa1\x58\xfc\xd1\xa0\xa7\x49\x2d\x5e\x44\x6d\xdc\x85\xc1\x6c\xf5\xf8\xff\x47\x39\x9b\xf4\x84\x6d\x18\xcc\x96\x8b\xc5\xa2\x4e\x1b\x4a\xd6\xf2\x2e\xe6\x71\xb9\xba\x8d\x59\x4d\x31\xa8\xdb\x94\x30\x5c\xdf\xee\xb8\xd9\x7e\xdd\x3d\x6f\xcb\x4f\xfb\xe7\xe3\x84\xd2\x72\xd5\x20\x83\x6f\x44\x96\xcd\xe7\x48\xa2\x62\xab\x87\x37\xef\x6e\x30\x9e\x8e\x9f\xb7\x4f\x23\xe4\x70\x8b\xd2\x3f\x46\x7e\x32\x86\x3c\x39\x6e\xd9\x7a\xbd\x5c\x8c\x73\xd6\xb8\xd4\x5e\x7e\x7d\xed\xd2\x38\x62\xb0\x5e\x3f\x24\x4c\xeb\x0c\x19\x61\x14\x83\xe3\xa6\xbc\x2f\x7a\xbb\xb8\xab\xc9\xf3\x7c\x92\xff\x76\xc8\xfb\x01\x5d\x2b\x05\xfe\x33\xec\xd3\xe8\xfe\x11\xdb\x21\xb2\xa3\xa3\xbc\xdf\x8e\xa7\xa1\x3e\x78\x93\x03\xfe\xe2\xc7\x5b\x4e\xc6\x07\xc7\xe9\xfc\x50\xbb\x0a\x7c\x06\xfd\xb7\xeb\x34\x57\xfb\xd2\xb3\x10\x1c\xd7\x67\x84\xe2\x20\x09\xf7\xfa\xc5\x14\xbb\x6b\xb7\x4f\x6b\x1e\x13\xdd\x75\x21\xa0\xae\xfa\x82\x47\x85\x82\x8c\xbb\xe9\xe6\x67\x00\x00\x00\xff\xff\xd5\x0b\x2c\xbd\x35\x04\x00\x00")

func mrplotterDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_mrplotterDeploymentYaml,
		"mrplotter.deployment.yaml",
	)
}

func mrplotterDeploymentYaml() (*asset, error) {
	bytes, err := mrplotterDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "mrplotter.deployment.yaml", size: 1077, mode: os.FileMode(436), modTime: time.Unix(1487551391, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _pmu2btrdbDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x53\xc1\x8e\x9b\x30\x10\xbd\xf3\x15\xa3\xed\x19\xd2\x6c\x23\x75\xeb\xe3\x26\xa8\x42\xaa\x76\x51\x82\xf6\xba\x1a\xcc\x6c\x6a\xd5\xd8\x96\x99\xa0\x8d\x2c\xfe\xbd\x82\x16\x42\x52\xba\x3e\x39\x6f\xfc\xde\xbc\xc9\x3c\x3e\x41\x08\x90\x7c\x27\xf3\x43\x19\x82\xae\x8b\xd0\xa9\x17\xf2\x8d\xb2\x46\x00\xbd\x33\x99\xfe\xda\xac\xda\x75\x49\x8c\xeb\xe8\x97\x32\x95\x80\x1d\x39\x6d\xcf\x35\x19\x8e\x6a\x62\xac\x90\x51\x44\x00\x06\x6b\x12\xe0\xea\xd3\x7d\xc9\xbe\x2a\xa3\xc6\x91\xec\x71\x4f\x4e\x2b\x89\x8d\x80\x4d\x04\xc0\x54\x3b\x8d\x4c\x7d\x05\x60\xce\xef\x8f\xc6\x92\x74\x33\xfe\x02\x40\xe7\xe6\x92\x3d\x34\xca\xf6\x47\x5a\xc3\xa8\x0c\xf9\x89\x12\xff\x63\x63\x94\x52\x35\x1e\x49\xc0\x00\xae\x42\x48\xf2\xb7\xf7\xae\x9b\x9e\x89\x10\x92\x02\xfd\x91\xf8\xef\xfc\x5d\x77\xcd\xcc\x4f\x5a\xe7\x56\x2b\x79\x16\x10\x42\xb2\x9d\x3a\x27\xd9\x75\x79\x46\x24\xd3\x5e\x46\xb9\x78\x4b\x8b\xed\xee\x35\x7d\xda\xe5\xcf\xd9\x53\x31\xab\x03\xb4\xa8\x4f\x24\xe0\x27\xb3\x13\xab\x15\xb1\xac\xc4\xfd\x97\xaf\xdf\x16\x34\xf6\xe9\x36\xcd\x5e\xd2\xfd\x6b\xfe\xbc\x5f\xd4\xb8\x5b\x3f\x3c\x6c\xee\x16\x98\x8f\xc5\x7e\xf7\x38\xb5\x3f\x2c\x71\x87\x7f\x24\x2e\xad\xe5\x86\x3d\x3a\xb1\xd9\xac\x3f\x4f\xef\x9c\xf5\x3c\xdb\x50\x7c\x59\x42\x6e\x3d\x0b\xe8\xfb\xce\x44\x9d\xb7\x6c\xa5\xd5\x02\x8a\x6d\x3e\xc3\x6f\xd6\x14\xeb\xa3\x3c\x47\x71\x1c\x5f\x45\xb0\x1d\x23\x77\x20\xdf\x2a\x49\x1f\xe6\xed\x3a\x3d\x37\xc9\x19\x53\x33\xb9\x8f\x87\xeb\xcc\x2e\x0f\xdb\xff\x33\xc3\x8d\xad\xff\xfa\x85\xe1\x23\xf1\x06\x75\x96\x37\x22\x04\x8f\xe6\x48\x90\x1c\x14\x53\x66\xde\x6c\x92\x5e\xaa\x43\x2c\xe2\x3e\x3a\x5d\x17\x02\x99\x6a\x00\x1a\xd2\x24\xd9\xfa\x45\xcf\xbf\x03\x00\x00\xff\xff\x55\x40\x77\x5f\x9e\x03\x00\x00")

func pmu2btrdbDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_pmu2btrdbDeploymentYaml,
		"pmu2btrdb.deployment.yaml",
	)
}

func pmu2btrdbDeploymentYaml() (*asset, error) {
	bytes, err := pmu2btrdbDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "pmu2btrdb.deployment.yaml", size: 926, mode: os.FileMode(436), modTime: time.Unix(1487551394, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _receiverDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x94\x4d\x6f\xa3\x3c\x10\xc7\xef\x7c\x8a\x51\x9e\x33\xe4\xa5\xcf\x6a\xbb\xbe\xad\x52\x54\x21\xb5\x09\x4a\xa3\x5e\x2b\xc7\x4c\x89\x55\x63\x7b\x8d\x41\x45\x16\xdf\x7d\xe5\x74\x49\x70\x97\x74\x39\x99\x19\xcf\xcf\xe3\xbf\x67\xe6\x3f\x70\x0e\x92\x7b\x94\x0f\x5c\x22\xf4\x7d\x44\x35\x7f\x46\x53\x73\x25\x09\xe0\xbb\x45\xe9\x97\xf5\xbc\x5d\x1e\xd0\xd2\x65\xf4\xc6\x65\x41\xe0\x0e\xb5\x50\x5d\x85\xd2\x46\x15\x5a\x5a\x50\x4b\x49\x04\x20\x69\x85\x04\x0c\x32\xe4\x2d\x9a\xb8\xd1\x55\x13\xd5\x1a\x99\xf7\x19\xd4\x82\x33\x5a\x13\x58\x45\x00\x16\x2b\x2d\xa8\x45\xef\x01\x18\x33\xfc\x27\xe8\x01\x45\x3d\xfc\x01\x50\xad\x3f\x63\xbd\x79\x40\xfb\x8f\x29\x69\x29\x97\x68\xce\x61\xf1\xa7\x74\xce\x34\x5e\xd1\x12\x09\x1c\xac\x29\x0e\x73\xe7\x92\xfc\xf5\xbd\xef\x87\x5d\xc4\xb9\x64\x4f\x4d\x89\xf6\x8f\x0a\x7d\x1f\x06\xe6\x8d\x10\xb9\x12\x9c\x75\x04\x9c\x4b\xd6\xe7\x73\x93\x2c\x74\x8f\x02\x0d\xd6\xaa\x31\x0c\x47\x57\xf2\xc6\x5f\x0d\xd6\x36\xb0\x79\x29\x2a\x65\x3a\x02\xb3\x6f\xcb\xd5\x23\x9f\x05\x3e\xa6\x1b\x02\xb3\xe5\x62\xb1\xa8\xc6\x0e\xc1\x2b\x7e\x15\xb3\x5c\xac\xfe\x9f\xe6\xac\x42\x0e\xca\x76\x8c\x18\xd4\x4b\xf7\xeb\xbb\x97\x74\x73\x97\x6f\xb3\xcd\x3e\xa0\xb4\x54\x34\x48\xe0\x68\xad\x26\xf3\x39\x5a\x56\x90\xd5\xcd\xf7\x1f\x13\x8c\x5d\xba\x4e\xb3\xe7\x74\xf7\x92\x6f\x77\x93\x8c\xd9\xf2\xf6\xf6\x66\xf6\x75\xe4\xf6\x61\x2a\xd2\xb9\xe4\x89\x5b\xcc\xe4\xab\x4a\xd6\xa8\x8f\xc9\x93\xa5\x25\x97\x65\xae\x94\x18\x3d\xc0\x04\xf1\x3e\xdd\xa4\xbb\x9f\xfb\x6c\xbb\x99\xce\x68\x71\xc9\xa7\x55\xa2\xa9\xf0\x51\x35\x32\x94\x79\x60\x32\xd4\xc7\xf8\x0d\x3b\xc3\x65\x19\xbe\x82\x0f\xc9\xa9\x3d\x12\xf0\x02\xcd\xfd\xc6\x79\xb0\xc3\x20\x2d\xb6\x52\x74\x04\xac\x69\xf0\xec\xd2\xca\x8c\x8f\x8a\x2f\xe5\x9d\x2b\x63\x09\x78\xbd\x46\x1c\x6d\x94\x55\x4c\x09\x02\xfb\x75\x3e\xb2\x7f\xea\x47\x81\x25\x65\x5d\x34\xbe\x54\x70\xc8\x97\xb7\xa9\x91\x19\xb4\x61\x95\x7d\xd8\x36\x7f\x87\xc5\x71\x1c\x0c\x92\x76\x18\x1c\x4f\x68\x5a\xce\xf0\x9f\x53\x23\x9c\x01\x13\xfd\x3f\xf4\xfe\x59\xa9\xf8\xb4\x1c\x49\x63\x4f\x5d\xfc\xa1\xd7\x94\x04\xd7\xc4\xf1\x43\xcf\x48\x2a\xb2\xbc\x26\xce\x19\x2a\x4b\x84\x4b\x91\xa5\x17\xef\xa9\xbe\x62\x5f\x82\x7d\xef\x1c\xca\xe2\x64\xa8\x51\x20\xb3\xca\x5c\xcd\xfc\x77\x00\x00\x00\xff\xff\xac\x4f\x93\x37\x72\x05\x00\x00")

func receiverDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_receiverDeploymentYaml,
		"receiver.deployment.yaml",
	)
}

func receiverDeploymentYaml() (*asset, error) {
	bytes, err := receiverDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "receiver.deployment.yaml", size: 1394, mode: os.FileMode(436), modTime: time.Unix(1487551397, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"adminconsole.deployment.yaml": adminconsoleDeploymentYaml,
	"btrdb.statefulset.yaml": btrdbStatefulsetYaml,
	"c37ingress.deployment.yaml": c37ingressDeploymentYaml,
	"create_admin_key.sh": create_admin_keySh,
	"createdb.job.yaml": createdbJobYaml,
	"etcd.statefulset.yaml": etcdStatefulsetYaml,
	"ingester.deployment.yaml": ingesterDeploymentYaml,
	"mrplotter.deployment.yaml": mrplotterDeploymentYaml,
	"pmu2btrdb.deployment.yaml": pmu2btrdbDeploymentYaml,
	"receiver.deployment.yaml": receiverDeploymentYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"adminconsole.deployment.yaml": &bintree{adminconsoleDeploymentYaml, map[string]*bintree{}},
	"btrdb.statefulset.yaml": &bintree{btrdbStatefulsetYaml, map[string]*bintree{}},
	"c37ingress.deployment.yaml": &bintree{c37ingressDeploymentYaml, map[string]*bintree{}},
	"create_admin_key.sh": &bintree{create_admin_keySh, map[string]*bintree{}},
	"createdb.job.yaml": &bintree{createdbJobYaml, map[string]*bintree{}},
	"etcd.statefulset.yaml": &bintree{etcdStatefulsetYaml, map[string]*bintree{}},
	"ingester.deployment.yaml": &bintree{ingesterDeploymentYaml, map[string]*bintree{}},
	"mrplotter.deployment.yaml": &bintree{mrplotterDeploymentYaml, map[string]*bintree{}},
	"pmu2btrdb.deployment.yaml": &bintree{pmu2btrdbDeploymentYaml, map[string]*bintree{}},
	"receiver.deployment.yaml": &bintree{receiverDeploymentYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

