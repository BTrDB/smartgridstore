package main

import (
	"io/ioutil"

	yaml "gopkg.in/yaml.v2"
)

type SiteConfig struct {
	ApiVersion string `yaml:"apiVersion"`
	Containers struct {
		Channel         string `yaml:"channel"`
		ImagePullPolicy string `yaml:"imagePullPolicy"`
	} `yaml:"containers"`
	SiteInfo struct {
		Ceph struct {
			StagingPool string `yaml:"stagingPool"`
			BTrDBPool   string `yaml:"btrdbPool"`
			RBDPool     string `yaml:"rbdPool"`
		} `yaml:"ceph"`
		ExternalIPs []string `yaml:"externalIPs"`
	} `yaml:"siteInfo"`
}

const DefaultSiteConfig = `apiVersion: smartgrid.store/v1
kind: SiteConfig
containers:
  channel: release
  imagePullPolicy: Always
siteInfo:
  ceph:
    stagingPool: staging
    btrdbPool: btrdb
    rbdPool: rbd
  externalIPs:
  - 128.32.37.141
`

func LoadSiteConfig(filename string) (*SiteConfig, error) {
	ba, err := ioutil.ReadFile(filename)
	if err != nil {
		return nil, err
	}
	return LoadSiteConfigArray(ba)
}

func LoadSiteConfigArray(arr []byte) (*SiteConfig, error) {
	rv := SiteConfig{}
	er := yaml.Unmarshal(arr, &rv)
	if er != nil {
		return nil, er
	}
	return &rv, nil
}

func (sc *SiteConfig) TargetVersion() string {
	return PackageVersion
}
func (sc *SiteConfig) Pfx() string {
	if sc.Containers.Channel == "release" {
		return ""
	}
	return "dev-"
}
func (sc *SiteConfig) GenLine() string {
	return "generated by SGS MFGEN v" + PackageVersion
}

//
// 	cephStagingPool: staging
// 	cephBTrDBPool: btrdb
// 	cephRBDPool:
// stack:
//   btrdb:
//     replicas: 3
//     resources:
//       cpu: "20"
//       memory: "96Gi"
//     cephPool: btrdb
//   mrplotter:
//     replicas: 2
//   upmuReceiver:
//     replicas: 2
//     port: 1883
//     cephPool: staging
//   upmuIngester:
//     cephPool: staging
//   pmu2btrdb:
//     replicas: 2
//     port: 1884
//   storageClass:
//     createRBDStorageClass: yes
//     cephPool: rbd
// ---`
